

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 17 08:51:14 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0008                     _PORTD	set	8
   124  001E                     _ADRESH	set	30
   125  001F                     _ADCON0	set	31
   126  009E                     _ADRESL	set	158
   127  0087                     _TRISC	set	135
   128  0088                     _TRISD	set	136
   129  009F                     _ADCON1	set	159
   130  0085                     _TRISA	set	133
   131  0188                     _ANSEL	set	392
   132                           
   133                           	psect	cinit
   134  07FA                     start_initialization:	
   135                           ; #config settings
   136                           
   137  07FA                     __initialization:	
   138                           
   139                           ; Clear objects allocated to COMMON
   140  07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   141  07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   142  07FC                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  07FC                     __end_of__initialization:	
   146  07FC  0183               	clrf	3
   147  07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMMON
   150  0077                     __pbssCOMMON:	
   151  0077                     _valor:	
   152  0077                     	ds	2
   153                           
   154                           	psect	cstackCOMMON
   155  0070                     __pcstackCOMMON:	
   156  0070                     ?_main:	
   157  0070                     ?___wmul:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  0070                     ___wmul@multiplier:	
   161                           ; 2 bytes @ 0x0
   162                           
   163                           
   164                           ; 2 bytes @ 0x0
   165  0070                     	ds	2
   166  0072                     ___wmul@multiplicand:	
   167                           
   168                           ; 2 bytes @ 0x2
   169  0072                     	ds	2
   170  0074                     ??___wmul:	
   171  0074                     ___wmul@product:	
   172                           ; 1 bytes @ 0x4
   173                           
   174                           
   175                           ; 2 bytes @ 0x4
   176  0074                     	ds	2
   177  0076                     ??_main:	
   178                           
   179                           ; 1 bytes @ 0x6
   180  0076                     	ds	1
   181                           
   182                           	psect	maintext
   183  07B0                     __pmaintext:	
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 8 in file "C:\Users\Aluno\Desktop\PortableGit\ecai11\dc-motor-control\code\main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  valor_f         3    0        float 
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : B00/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   203 ;;      Params:         0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0
   205 ;;      Temps:          1       0       0       0       0
   206 ;;      Totals:         1       0       0       0       0
   207 ;;Total ram usage:        1 bytes
   208 ;; Hardware stack levels required when called:    1
   209 ;; This function calls:
   210 ;;		___wmul
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           
   217                           ;psect for function _main
   218  07B0                     _main:	
   219                           
   220                           ;main.c: 10: float valor_f;
   221                           ;main.c: 11: TRISA |=1<<0;
   222                           
   223                           ;incstack = 0
   224                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   225  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   226  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   227  07B2  1405               	bsf	5,0	;volatile
   228                           
   229                           ;main.c: 12: ANSEL |=1<<0;
   230  07B3  1683               	bsf	3,5	;RP0=1, select bank3
   231  07B4  1703               	bsf	3,6	;RP1=1, select bank3
   232  07B5  1408               	bsf	8,0	;volatile
   233                           
   234                           ;main.c: 14: ADCON0=0x00;
   235  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   236  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   237  07B8  019F               	clrf	31	;volatile
   238                           
   239                           ;main.c: 15: ADCON0|=0b01000001;
   240  07B9  3041               	movlw	65
   241  07BA  00F6               	movwf	??_main
   242  07BB  0876               	movf	??_main,w
   243  07BC  049F               	iorwf	31,f	;volatile
   244                           
   245                           ;main.c: 17: ADCON1=0;
   246  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   247  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   248  07BF  019F               	clrf	31	;volatile
   249                           
   250                           ;main.c: 18: ADCON1|=(1<<7);
   251  07C0  179F               	bsf	31,7	;volatile
   252                           
   253                           ;main.c: 19: TRISD=0;
   254  07C1  0188               	clrf	8	;volatile
   255                           
   256                           ;main.c: 20: TRISC=0;
   257  07C2  0187               	clrf	7	;volatile
   258  07C3                     l567:	
   259                           ;main.c: 22: while(1){
   260                           
   261                           
   262                           ;main.c: 23: ADCON0 |= (1<<1);
   263  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   264  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   265  07C5  149F               	bsf	31,1	;volatile
   266  07C6                     l571:	
   267                           ;main.c: 24: while(ADCON0 & (1<<1))
   268                           
   269  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   270  07C7  1C9F               	btfss	31,1	;volatile
   271  07C8  2FD0               	goto	l573
   272                           
   273                           ;main.c: 25: valor= (ADRESH<<8) + ADRESL;
   274  07C9  081E               	movf	30,w	;volatile
   275  07CA  00F8               	movwf	_valor+1
   276  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   277  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   278  07CD  081E               	movf	30,w	;volatile
   279  07CE  00F7               	movwf	_valor
   280  07CF  2FC6               	goto	l571
   281  07D0                     l573:	
   282                           
   283                           ;main.c: 26: valor=valor*5;
   284  07D0  0878               	movf	_valor+1,w
   285  07D1  00F1               	movwf	___wmul@multiplier+1
   286  07D2  0877               	movf	_valor,w
   287  07D3  00F0               	movwf	___wmul@multiplier
   288  07D4  3005               	movlw	5
   289  07D5  00F2               	movwf	___wmul@multiplicand
   290  07D6  3000               	movlw	0
   291  07D7  00F3               	movwf	___wmul@multiplicand+1
   292  07D8  120A  118A  278F  120A  118A  	fcall	___wmul
   293  07DD  0871               	movf	?___wmul+1,w
   294  07DE  00F8               	movwf	_valor+1
   295  07DF  0870               	movf	?___wmul,w
   296  07E0  00F7               	movwf	_valor
   297                           
   298                           ;main.c: 27: if(valor>2000){
   299  07E1  0878               	movf	_valor+1,w
   300  07E2  3A80               	xorlw	128
   301  07E3  00FF               	movwf	127
   302  07E4  3087               	movlw	135
   303  07E5  027F               	subwf	127,w
   304  07E6  1D03               	skipz
   305  07E7  2FEA               	goto	u125
   306  07E8  30D1               	movlw	209
   307  07E9  0277               	subwf	_valor,w
   308  07EA                     u125:	
   309  07EA  1C03               	skipc
   310  07EB  2FF0               	goto	l579
   311                           
   312                           ;main.c: 28: PORTD|=(1<<0);
   313  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   314  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   315  07EE  1408               	bsf	8,0	;volatile
   316                           
   317                           ;main.c: 29: }else{
   318  07EF  2FF6               	goto	l581
   319  07F0                     l579:	
   320                           
   321                           ;main.c: 30: PORTD &= ~(1<<0);
   322  07F0  30FE               	movlw	254
   323  07F1  00F6               	movwf	??_main
   324  07F2  0876               	movf	??_main,w
   325  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   326  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   327  07F5  0588               	andwf	8,f	;volatile
   328  07F6                     l581:	
   329                           
   330                           ;main.c: 31: }
   331                           ;main.c: 32: _delay((unsigned long)((5)*(4000000/4000000.0)));
   332  07F6  2FF7               	nop2	;2 cycle nop
   333  07F7  2FF8               	nop2	;2 cycle nop
   334  07F8  0000               	nop
   335  07F9  2FC3               	goto	l567
   336  07FA                     __end_of_main:	
   337                           
   338                           	psect	text1
   339  078F                     __ptext1:	
   340 ;; *************** function ___wmul *****************
   341 ;; Defined at:
   342 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  multiplier      2    0[COMMON] unsigned int 
   345 ;;  multiplicand    2    2[COMMON] unsigned int 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  product         2    4[COMMON] unsigned int 
   348 ;; Return value:  Size  Location     Type
   349 ;;                  2    0[COMMON] unsigned int 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         4       0       0       0       0
   358 ;;      Locals:         2       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0
   360 ;;      Totals:         6       0       0       0       0
   361 ;;Total ram usage:        6 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; This function calls:
   364 ;;		Nothing
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function ___wmul
   372  078F                     ___wmul:	
   373                           
   374                           ;incstack = 0
   375                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   376  078F  01F4               	clrf	___wmul@product
   377  0790  01F5               	clrf	___wmul@product+1
   378  0791                     l541:	
   379  0791  1C70               	btfss	___wmul@multiplier,0
   380  0792  2F99               	goto	l119
   381  0793  0872               	movf	___wmul@multiplicand,w
   382  0794  07F4               	addwf	___wmul@product,f
   383  0795  1803               	skipnc
   384  0796  0AF5               	incf	___wmul@product+1,f
   385  0797  0873               	movf	___wmul@multiplicand+1,w
   386  0798  07F5               	addwf	___wmul@product+1,f
   387  0799                     l119:	
   388  0799  3001               	movlw	1
   389  079A                     u85:	
   390  079A  1003               	clrc
   391  079B  0DF2               	rlf	___wmul@multiplicand,f
   392  079C  0DF3               	rlf	___wmul@multiplicand+1,f
   393  079D  3EFF               	addlw	-1
   394  079E  1D03               	skipz
   395  079F  2F9A               	goto	u85
   396  07A0  3001               	movlw	1
   397  07A1                     u95:	
   398  07A1  1003               	clrc
   399  07A2  0CF1               	rrf	___wmul@multiplier+1,f
   400  07A3  0CF0               	rrf	___wmul@multiplier,f
   401  07A4  3EFF               	addlw	-1
   402  07A5  1D03               	skipz
   403  07A6  2FA1               	goto	u95
   404  07A7  0870               	movf	___wmul@multiplier,w
   405  07A8  0471               	iorwf	___wmul@multiplier+1,w
   406  07A9  1D03               	btfss	3,2
   407  07AA  2F91               	goto	l541
   408  07AB  0875               	movf	___wmul@product+1,w
   409  07AC  00F1               	movwf	?___wmul+1
   410  07AD  0874               	movf	___wmul@product,w
   411  07AE  00F0               	movwf	?___wmul
   412  07AF  0008               	return
   413  07B0                     __end_of___wmul:	
   414  007E                     btemp	set	126	;btemp
   415  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     198
                                              6 COMMON     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 17 08:51:14 2020

                     u85 079A                       u95 07A1      ___wmul@multiplicand 0072  
                    l119 0799                      l541 0791                      l571 07C6  
                    l581 07F6                      l573 07D0                      l567 07C3  
                    l579 07F0                      u125 07EA                     _main 07B0  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _valor 0077  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0076                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ___wmul 078F  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07B0                  ?___wmul 0070          __size_of___wmul 0021  
                __ptext1 078F     end_of_initialization 07FC           __end_of___wmul 07B0  
    start_initialization 07FA                 ??___wmul 0074              __pbssCOMMON 0077  
              ___latbits 0002           ___wmul@product 0074        ___wmul@multiplier 0070  
          __size_of_main 004A  
